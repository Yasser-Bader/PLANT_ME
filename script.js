let model;
let class_indices;
let fileUpload = document.getElementById('uploadImage')
let img = document.getElementById('image')
let boxResult = document.querySelector('.box-result')
let confidence = document.querySelector('.confidence')
let pconf = document.querySelector('.box-result p')
/*
$("textarea").each(function () {
    this.setAttribute("style", "height:" + (this.scrollHeight) + "px;overflow-y:hidden;");
  }).on("input", function () {
    this.style.height = 0;
    this.style.height = (this.scrollHeight) + "px";
  });*/
        
        let progressBar = 
            new ProgressBar.Circle('#progress', {
            color: 'limegreen',
            strokeWidth: 10,
            duration: 2000, // milliseconds
            easing: 'easeInOut'
        });

        async function fetchData(){
            let response = await fetch('./class_indices.json');
            let data = await response.json();
            data = JSON.stringify(data);
            data = JSON.parse(data);
            return data;
        }

         // here the data will be return.
        

        // Initialize/Load model
        async function initialize() {
            let status = document.querySelector('.init_status')
            status.innerHTML = 'ุฌุงุฑ ุงูุชุญููู .... <span class="fa fa-spinner fa-spin"></span>'
            model = await tf.loadLayersModel('./tensorflowjs-model/model.json');
            status.innerHTML = 'ุชู ุชุญููู ุงููููุฐุฌ ุจูุฌุงุญ  <span class="fa fa-check"></span>'
        }

        async function predict() {
            // Function for invoking prediction
            let img = document.getElementById('image')
            let offset = tf.scalar(255)
            let tensorImg =   tf.browser.fromPixels(img).resizeNearestNeighbor([224,224]).toFloat().expandDims();
            let tensorImg_scaled = tensorImg.div(offset)
            prediction = await model.predict(tensorImg_scaled).data();
           
            fetchData().then((data)=> 
                {
                    predicted_class = tf.argMax(prediction)
                    
                    class_idx = Array.from(predicted_class.dataSync())[0]
                    document.querySelector('.pred_class').innerHTML = data[class_idx]
                    document.querySelector('.inner').innerHTML = `ูุชุฃูุฏ ${parseFloat(prediction[class_idx]*100).toFixed(2)}%`
                    console.log(data)
                    console.log(data[class_idx])
                    console.log(prediction)

                    progressBar.animate(prediction[class_idx]-0.005); // percent

                    pconf.style.display = 'block'

                    confidence.innerHTML = Math.round(prediction[class_idx]*100)
                    if(data[class_idx] == "Potato___Early_blight")
                    {

                        document.querySelector('.printt').innerHTML =`ูุจุงุชู ูุตุงุจ ุจุงูููุญุฉ ุงููุจูุฑุฉ ูู ุงูุจุทุงุทุง
ุงูุฃุนุฑุงุถ:
ุชุญุฏุซ ุงูุฅุตุงุจุฉ ุจุงูููุญุฉ ุงููุจูุฑุฉ ูู ุงูุจุทุงุทุง ุจุณุจุจ ุงููุทุฑ. ุญูุซ ูุคุซุฑ ุงููุฑุถ ุนูู ุงูุฃูุฑุงู ูุงูุณููุงู ูุงูุฏุฑูุงุช ููููู ุฃู ูููู ุงููุญุตูู ูุญุฌู ุงูุฏุฑูุงุช ููุงุจููุฉ ุชุฎุฒูู ุงูุฏุฑูุงุช ูุฌูุฏุฉ ุงูุณูู ุงูุทุงุฒุฌุฉ ูุฏุฑูุงุช ุงููุนุงูุฌุฉ ูุฅููุงููุฉ ุชุณููู ุงููุญุตูู.

ุดุฏุฉ ุงูููุญุฉ ุงููุจูุฑุฉ ุนูู ุงูุจุทุงุทุง
ูู ูุนุธู ููุงุทู ุงูุฅูุชุงุฌ ุ ุชุญุฏุซ ุงูููุญุฉ ุงููุจูุฑุฉ ุณููููุง ุฅูู ุญุฏ ูุง.
ู ุชุนุชูุฏ ุดุฏุฉ ุงูููุญุฉ ุงููุจูุฑุฉ ุนูู :

ูุนุฏู ุฑุทูุจุฉ ุงูุฃูุฑุงู ูู ุงููุทุฑ ุฃู ุงููุฏู ุฃู ุงูุฑู .
ุงูุญุงูุฉ ุงูุชุบุฐููุฉ ูุฃูุฑุงู ุงูุดุฌุฑ.
ููุงุจููุฉ ุงูุตูู ููุฅุตุงุจุฉ .

ุงูููุงูุฉ ูููุงูุญุฉ ุงูููุญุฉ ุงููุจูุฑุฉ ุนูู ุงูุจุทุงุทุง

ุฒุฑุงุนุฉ ุฃุตูุงู ูุชุฃุฎุฑุฉ ุงููุถุฌ ุฐุงุช ูุงุจููุฉ ุฃูู ููุฅุตุงุจุฉ ุจุงูููุญุฉ ุงููุจูุฑุฉ. ุงูููุงููุฉ ูุฑุชุจุทุฉ ุจูุถุฌ ุงููุจุงุช ูุงูุฃุตูุงู ุงููุจูุฑุฉ ุงููุถุฌ ุฃูุซุฑ ุนุฑุถุฉ.
ุชูููุช ุงูุฑู ูุชูููู ูุฏุฉ ุฑุทูุจุฉ ุงูุฃูุฑุงู ุฃุซูุงุก ุงูุทูุณ ุงูุบุงุฆู ูุฅุชุงุญุฉ ุงูููุช ุงููุงูู ูุชุฌู ุงูุฃูุฑุงู ูุจู ุญููู ุงูุธูุงู.
ุชุฌูุจ ููุต ุงููุณููุฑ ูุงูููุชุฑูุฌูู.
ูู ุจูุญุต ุงูุญููู ุจุงูุชุธุงู ููุชุฃูุฏ ูู ุงูุนุฏูู ุงูุชู ุชุจุฏุฃ ุจุนุฏ ุฃู ูุตู ุงุฑุชูุงุน ุงููุจุงุชุงุช ุฅูู 12 ุจูุตุฉ. ู ุงูุชุจู ุจุดูู ุฎุงุต ุฅูู ุญูุงู ุงูุญููู ุงููุฌุงูุฑุฉ ููุญููู ุงููุฒุฑูุนุฉ ุจุงูุจุทุงุทุง ูู ุงูุนุงู ุงูุณุงุจู.
ุชูุงูุจ ูุจูุฏุงุช ุงููุทุฑูุงุช ุงููุฑููุฉ ุงููุชุฎุตุตุฉ .
ุงูุชุฎูุต ูู ุนุฑูุด ุงููุจุงุชุงุช ูุจู ุงูุญุตุงุฏ ุจุฃุณุจูุนูู ุฅูู ุซูุงุซุฉ ุฃุณุงุจูุน .
ุชุฌูุจ ุฅุญุฏุงุซ ุงูุฌุฑูุญ ุฃุซูุงุก ุงูุญุตุงุฏ.
ูู ุจุชุฎุฒูู ุงูุฏุฑูุงุช ูู ุธุฑูู ุชุนุฒุฒ ุงูุชุฆุงู ุงูุฌุฑูุญ (ุงูููุงุก ุงูููู ุ 95 ุฅูู 99 ูู ุงููุงุฆุฉ ูู ุงูุฑุทูุจุฉ ุงููุณุจูุฉ ุ ูุฏุฑุฌุงุช ุญุฑุงุฑุฉ ูู 55 ุฅูู 60 ููุฑููุงูุช) ููุฏุฉ ุฃุณุจูุนูู ุฅูู ุซูุงุซุฉ ุฃุณุงุจูุน ุจุนุฏ ุงูุญุตุงุฏ.
ุจุนุฏ ุงูุชุฆุงู ุงูุฌุฑูุญ ุ ูู ุจุชุฎุฒูู ุงูุฏุฑูุงุช ูู ููุงู ูุธูู ูุฌุงู ูุฌูุฏ ุงูุชูููุฉ ูุจุฑุฏ ุชุฏุฑูุฌููุง ุฅูู ุฏุฑุฌุฉ ุญุฑุงุฑุฉ ููุงุณุจุฉ ููุณูู ุงููุทููุจ.
ุงูุฏูุฑุฉ ุงูุฒุฑุงุนูุฉ :ุชูุงูุจ ุงูุญููู ุนูู ุงููุญุงุตูู ุบูุฑ ุงููุถููุฉ ููุฏุฉ ุซูุงุซ ุณููุงุช ุนูู ุงูุฃูู (ุชูุงูุจ ุงููุญุงุตูู ูู ุซูุงุซ ุฅูู ุฃุฑุจุน ุณููุงุช).
ุงููุถุงุก ุนูู ุนูุงุฆู ุงูุญุดุงุฆุด ูุซู ุงูุจุงุฐูุฌุงู ุงููุดุนุฑ ูุชูููู ุงูููุงุญ ููุฒุฑุงุนุฉ ุงููุณุชูุจููุฉ.`

                        document.querySelector('.print').innerHTML =`<h2>๐ ุงูุฃุนุฑุงุถ</h2>
                        ุงููุถุงุก ุนูู ุนูุงุฆู ุงูุญุดุงุฆุด ูุซู ุงูุจุงุฐูุฌุงู ุงููุดุนุฑ ูุชูููู ุงูููุงุญ ููุฒุฑุงุนุฉ ุงููุณุชูุจููุฉ.
                        ุงููุถุงุก ุนูู ุนูุงุฆู ุงูุญุดุงุฆุด ูุซู ุงูุจุงุฐูุฌุงู ุงููุดุนุฑ ูุชูููู ุงูููุงุญ ููุฒุฑุงุนุฉ ุงููุณุชูุจููุฉ.

                        <h2>ุงุฌุฑุงุกุงุช ููุงุฆูุฉ</h2>
                        ุงููุถุงุก ุนูู ุนูุงุฆู ุงูุญุดุงุฆุด ูุซู ุงูุจุงุฐูุฌุงู ุงููุดุนุฑ ูุชูููู ุงูููุงุญ ููุฒุฑุงุนุฉ ุงููุณุชูุจููุฉ.
                        ุงููุถุงุก ุนูู ุนูุงุฆู ุงูุญุดุงุฆุด ูุซู ุงูุจุงุฐูุฌุงู ุงููุดุนุฑ ูุชูููู ุงูููุงุญ ููุฒุฑุงุนุฉ ุงููุณุชูุจููุฉ.

                        <h2>โ ุงูููุงูุญุฉ ุงูููููุงุฆูุฉ</h2>
                        ุงููุถุงุก ุนูู ุนูุงุฆู ุงูุญุดุงุฆุด ูุซู ุงูุจุงุฐูุฌุงู ุงููุดุนุฑ ูุชูููู ุงูููุงุญ ููุฒุฑุงุนุฉ ุงููุณุชูุจููุฉ.
                        ุงููุถุงุก ุนูู ุนูุงุฆู ุงูุญุดุงุฆุด ูุซู ุงูุจุงุฐูุฌุงู ุงููุดุนุฑ ูุชูููู ุงูููุงุญ ููุฒุฑุงุนุฉ ุงููุณุชูุจููุฉ.

                        <h2> ุณุจุจ ุงููุฑุถ</h2>
                        ุงููุถุงุก ุนูู ุนูุงุฆู ุงูุญุดุงุฆุด ูุซู ุงูุจุงุฐูุฌุงู ุงููุดุนุฑ ูุชูููู ุงูููุงุญ ููุฒุฑุงุนุฉ ุงููุณุชูุจููุฉ.
                        ุงููุถุงุก ุนูู ุนูุงุฆู ุงูุญุดุงุฆุด ูุซู ุงูุจุงุฐูุฌุงู ุงููุดุนุฑ ูุชูููู ุงูููุงุญ ููุฒุฑุงุนุฉ ุงููุณุชูุจููุฉ.
                        `

                    }else{
                      document.querySelector('.print').innerHTML = "no no"
                    }
                }
            );
            
        }

        

        fileUpload.addEventListener('change', function(e){
            
            let uploadedImage = e.target.value
            if (uploadedImage){
                document.getElementById("blankFile-1").innerHTML = uploadedImage.replace("C:\\fakepath\\","")
                document.getElementById("choose-text-1").innerText = "ุชุบููุฑ ุงูุตูุฑุฉ ุงููุฎุชุงุฑุฉ"
                document.querySelector(".success-1").style.display = "inline-block"

                let extension = uploadedImage.split(".")[1]
                if (!(["doc","docx","pdf"].includes(extension))){
                    document.querySelector(".success-1 i").style.border = "1px solid limegreen"
                    document.querySelector(".success-1 i").style.color = "limegreen"
                }else{
                    document.querySelector(".success-1 i").style.border = "1px solid rgb(25,110,180)"
                    document.querySelector(".success-1 i").style.color = "rgb(25,110,180)"
                }
            }
            let file = this.files[0]
            if (file){
                boxResult.style.display = 'block'
                const reader = new FileReader();
                reader.readAsDataURL(file);
                reader.addEventListener("load", function(){
                    
                    img.style.display = "block"
                    img.setAttribute('src', this.result);
                });
            }

            else{
            img.setAttribute("src", "");
            }

            initialize().then( () => { 
                predict()
            })
        })